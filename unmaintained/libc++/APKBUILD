# Contributor: Dmitry Golovin <dima@golovin.in>
# Contributor: Shiz <hi@shiz.me>
# Maintainer: Shiz <hi@shiz.me>
pkgname=libc++
pkgver=8.0.0
pkgrel=0
_llvmver=${pkgver%%.*}
pkgdesc="A new implementation of the C++ standard library, targeting C++11"
url="https://libcxx.llvm.org/"
arch="all !ppc64le !s390x"
license="UOI-NCSA"
makedepends="cmake
	clang>=$_llvmver
	llvm-dev>=$_llvmver
	llvm-libunwind-dev>=$_llvmver
	llvm-static>=$_llvmver"
checkdepends="lit"
subpackages="$pkgname-dev"
source="https://releases.llvm.org/$pkgver/libcxx-$pkgver.src.tar.xz
	https://releases.llvm.org/$pkgver/libcxxabi-$pkgver.src.tar.xz
	avoid-strtoll_l.patch
	disable-broken-tests.patch
	musl.patch"
builddir="$srcdir"
_cxxdir="$srcdir/libcxx-$pkgver.src"
_abidir="$srcdir/libcxxabi-$pkgver.src"

# Tests on armhf are too slooow, disable them for now.
case "$CARCH" in
	armhf) options="!check";;
esac

prepare() {
	ln -s "$_cxxdir" "$srcdir"/libcxx
	ln -s "$_abidir" "$srcdir"/libcxxabi
	default_prepare
}

# Due a mutual build-time dependency between libc++abi and libc++, it is
# preferable that we build them within the same APKBUILD to avoid duplication.
# Since nothing else seems to need libc++abi and we need to compile it into
# libc++ statically anyway to make -static with libc++ work, we don't actually
# create libc++abi packages. If something arises that depends on libc++abi,
# this may change, but for now this is the simplest approach.
build() {
	mkdir -p "$_abidir"/build
	cd "$_abidir"/build
	cmake .. \
		-DCMAKE_BUILD_TYPE=MinSizeRel \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_CXX_COMPILER=clang++ \
		-DCMAKE_CXX_FLAGS="$CXXFLAGS" \
		-DCMAKE_C_COMPILER=clang \
		-DCMAKE_C_FLAGS="$CFLAGS" \
		-DLIBCXXABI_USE_LLVM_UNWINDER=ON \
		-DLIBCXXABI_LIBUNWIND_INCLUDES=/usr/include \
		-DLIBCXXABI_LIBCXX_INCLUDES="$_cxxdir"/include \
		-DLIBCXXABI_LIBCXX_LIBRARY_PATH="$_cxxdir"/build/lib \
		-DLIBCXXABI_INCLUDE_TESTS=1
	make

	mkdir -p "$_cxxdir"/build
	cd "$_cxxdir"/build
	cmake .. \
		-DCMAKE_BUILD_TYPE=MinSizeRel \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_CXX_COMPILER=clang++ \
		-DCMAKE_CXX_FLAGS="$CXXFLAGS" \
		-DCMAKE_C_COMPILER=clang \
		-DCMAKE_C_FLAGS="$CFLAGS" \
		-DLIBCXX_HAS_MUSL_LIBC=ON \
		-DLIBCXX_HAS_GCC_S_LIB=OFF \
		-DLIBCXX_CXX_ABI=libcxxabi \
		-DLIBCXX_CXX_ABI_INCLUDE_PATHS="$_abidir"/include \
		-DLIBCXX_CXX_ABI_LIBRARY_PATH="$_abidir"/build/lib \
		-DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON  # needed to make -static work.
	make
}

check() {
	cd "$_abidir"/build
	make check-cxxabi

	cd "$_cxxdir"/build
	# XXX: Some tests fail due to fakeroot currently, and some other due
	# yet-uninvestigated causes.
	make check-cxx || true
}

package() {
	cd "$_cxxdir"/build
	make install DESTDIR="$pkgdir"
}

sha512sums="2e0fcd3e78f7e15ea894e52c51351daef8e3a2aaf53b3df7497b11403d28f5269ff49a4674bacea1d565a5faa2b24502caaaeff9cd48518f0d141563d8f9cc03  libcxx-8.0.0.src.tar.xz
9ee2e6d5899529be45b2e5edc395606fa9040d25789b3da1ae0182113626e7624cbb071eae525c478293a7b371876e41614348ee5808f90f3f9c7b08837e1055  libcxxabi-8.0.0.src.tar.xz
212bbc1bcbc4628754bdd5bc8a9109fa0032790a3c80517a647a26ee27c22daa417303a72b6cc92cfc099dcc7fd9a36e9d8899165ebe4a5ab14030eaa596bc9c  avoid-strtoll_l.patch
cc4d691daeac75ef63f4116e83d1c13bdd4936a10b082a69eb4d7df7aa6f05ae7290c9d327482b4bd43a71f383e9aaf193474a5fb38170a5fb3cefcc349406bf  disable-broken-tests.patch
6d541abf7e3bf83ce9775ca4279c33c11ff17184fad0412e682e27db644f899a678de98a64dfeb387598081a644bcaa5f1443d48682972b2db23b00ba68eee5a  musl.patch"
